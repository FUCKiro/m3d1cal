rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Helper function to check if user is admin
    function isAdmin() {
      return request.auth != null && request.auth.token.role == 'admin';
    }

    // Helper function to check if user is a doctor
    function isDoctor() {
      return request.auth != null && 
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'doctor';
    }
    
    // Allow users to read and write their own data
    match /users/{userId} {
      allow create: if request.auth != null;
      allow read: if request.auth != null && (
        request.auth.uid == userId || 
        isAdmin()
      );
      allow update: if request.auth != null && (request.auth.uid == userId || isAdmin());
      allow delete: if isAdmin();
    }
    
    // Allow access to doctor schedules
    match /doctorSchedules/{doctorId} {
      allow read: if true; // Public read access for booking
      allow write, delete: if isAdmin(); // Only admins can manage schedules
    }
    
    // Allow authenticated users to manage their appointments
    match /appointments/{appointmentId} {
      allow create: if request.auth != null;
      allow read: if request.auth != null && (
        isAdmin() ||
        resource.data.patientId == request.auth.uid || 
        resource.data.doctorId == request.auth.uid
      );
      allow update: if request.auth != null && (
        isAdmin() ||
        resource.data.patientId == request.auth.uid || 
        resource.data.doctorId == request.auth.uid
      );
      allow delete: if isAdmin();
    }
  }
}